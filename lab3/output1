a:      int: start address 0x7ffc90c8f078   extent 4 
// выводится ссылка на ячейку памяти, где лежит значение перменной a, под переменную этого типа(int) отводится 4 байта
b:    float: start address 0x7ffc90c8f07c   extent 4
// выводится ссылка на ячейку памяти, где лежит значение перменной b, под переменную этого типа(float) отводится 4 байта
c:   double: start address 0x7ffc90c8f080   extent 8
// выводится ссылка на ячейку памяти, где лежит значение перменной c, под переменную этого типа(double) отводится 8 байт

p1: pointer: start address 0x7ffc90c8f088   extent 8
// выводится ссылка на ячейку памяти, где лежит значение указателя p1, под указатель отводится 8 байт(т.к. система 64-битная)
p2: pointer: start address 0x7ffc90c8f090   extent 8
// выводится ссылка на ячейку памяти, где лежит значение указателя p2, под указатель отводится 8 байт(т.к. система 64-битная)
p3: pointer: start address 0x7ffc90c8f098   extent 8
// выводится ссылка на ячейку памяти, где лежит значение указателя p3, под указатель отводится 8 байт(т.к. система 64-битная)

p1: 0x7ffc90c8f078 related value 1
// выводится значение указателя p1 - ссылка на значение переменной a, с помощью оператора разыменования получают значение a = 1 
p2: 0x7ffc90c8f07c related value 2.000000
// выводится значение указателя p2 - ссылка на значение переменной b, с помощью оператора разыменования получают значение b = 2.000000
p3: 0x7ffc90c8f080 related value 3.000000
// выводится значение указателя p1 - ссылка на значение переменной c, с помощью оператора разыменования получают значение c = 3.000000

a=1	b=2.000000	c=3.000000
// выводятся значения переменных a,b,c
a=5	b=10.000000	c=1.732051
// в переменную, на которую указывает p1, записали 5, в переменную, на которую указывает p2, записали произведение значений переменных, на которые указывают p2 и p1, в переменную, на которую указывает p3, записали квадратный корень из прошлого значения
*p1=5	*p2=10.000000	*p3=1.732051
// с помощью оператора разыменования были выведены значения переменных, на которые указывают p1, p2 и p3

p1=0x7ffc90c8f07c	p2=0x7ffc90c8f07c	p3=0x7ffc90c8f07c	p4=0x7ffc90c8f07c
// в указатель p1 записывают значение указателя p2 с явным приведением его значения к int, p2 без изменений, в указатель p3 записывают значение указателя p2 с явным приведением его значения к double, в указатель p4 записывают значение указателя p2  
*p1=1092616192	*p2=10.000000	*p3=-443459608143134273662885840611191986994302798471837256132976627811013080170989229007181138033542832573601215845759122503060014697629963593860094327024446067406523292934412865706388667269788991488.000000	*(float*)p4=  10.000000
// с помощью оператора разыменования выводятся значения, на которые указывают p1, p2, p3, p4. они все указывают на одно и то же значение, но являются разными типами, поэтому выводятся разные значения. при выводе p4 используется явное приведение к float, для корректного отображения

p1=0x7ffc90c8f080	p2=0x7ffc90c8f07c	p3=0x7ffc90c8f074
// в случае с p1 и p3 произошел сдвиг указателя на ячейки памяти, которые находятся на количество байт, выделяемое под запись числа их типа, вправо и влево соответственно
*p1=-396866390		*p2=10.000000	*p3=0.000000
// с помощью оператора разыменования выведены значения передвинутых указателей
p1=0x7ffc90c8f070	p2=0x7ffc90c8f07c	p3=0x7ffc90c8f070
// произошел сдвиг указателей, выведены их новые ссылки. p1 сместили на 4 влево, p3 присвоили ссылку на переменную a c явным приведение типа к double, а потом вычли 1 
*p1=-1865879336	*p2=10.000000	*p3=0.000000
// выведены значения обновленных указателей p1, p2, p3
